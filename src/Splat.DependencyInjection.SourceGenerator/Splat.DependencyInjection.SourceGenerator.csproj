<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <DevelopmentDependency>true</DevelopmentDependency>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <!-- forces SDK to copy dependencies into build output to make packing easier -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <PackageDescription>Produces DI registration for both property and constructor injection using the Splat locators.</PackageDescription>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);PackBuildOutputs</TargetsForTfmSpecificContentInPackage>
    <NoWarn>$(NoWarn);AD0001</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="3.8.0" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.2" PrivateAssets="all" />
    <PackageReference Include="ReactiveMarbles.RoslynHelpers" Version="1.0.9" PrivateAssets="all" />
  </ItemGroup>

  <Target Name="PackBuildOutputs">
    <ItemGroup>
      <TfmSpecificPackageFile Include="$(OutputPath)\**\ReactiveMarbles*.dll" PackagePath="analyzers/dotnet/cs" Visible="false" />
      <TfmSpecificPackageFile Include="$(OutputPath)\**\Splat*.dll" PackagePath="analyzers/dotnet/cs" Visible="false" />
      <TfmSpecificPackageFile Include="$(OutputPath)\**\Splat*.pdb" PackagePath="analyzers/dotnet/cs" Visible="false" />
    </ItemGroup>
  </Target>
</Project>
